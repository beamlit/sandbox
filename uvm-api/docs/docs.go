// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/filesystem/{path}": {
            "get": {
                "description": "Get content of a file or listing of a directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Get file or directory information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Directory listing",
                        "schema": {
                            "$ref": "#/definitions/filesystem.Directory"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Create or update a file or directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Create or update file or directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "File or directory information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a file or directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filesystem"
                ],
                "summary": "Delete file or directory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File or directory path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete directory recursively",
                        "name": "recursive",
                        "in": "body",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "File or directory not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/network/process/{pid}/monitor": {
            "post": {
                "description": "Start monitoring for new ports opened by a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "summary": "Start monitoring ports for a process",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Port monitor configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PortMonitorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object containing PID and success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Stop monitoring for new ports opened by a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "summary": "Stop monitoring ports for a process",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object containing PID and success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid process ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/network/process/{pid}/ports": {
            "get": {
                "description": "Get a list of all open ports for a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "summary": "Get open ports for a process",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object containing PID and array of network.PortInfo",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid process ID",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process": {
            "get": {
                "description": "Get a list of all running and completed processes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "List all processes",
                "responses": {
                    "200": {
                        "description": "Process list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ProcessResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Execute a command and return process information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Execute a command",
                "parameters": [
                    {
                        "description": "Process execution request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ProcessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process information",
                        "schema": {
                            "$ref": "#/definitions/api.ProcessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/name/{name}": {
            "get": {
                "description": "Get information about a process by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Get process by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process information",
                        "schema": {
                            "$ref": "#/definitions/api.ProcessResponse"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/{identifier}": {
            "get": {
                "description": "Get information about a process by its PID or name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Get process by identifier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process information",
                        "schema": {
                            "$ref": "#/definitions/api.ProcessResponse"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Gracefully stop a running process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Stop a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process stopped",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/{identifier}/kill": {
            "post": {
                "description": "Forcefully kill a running process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Kill a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Kill options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.ProcessKillRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process killed",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/process/{identifier}/logs": {
            "get": {
                "description": "Get the stdout and stderr output of a process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "process"
                ],
                "summary": "Get process logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Process identifier (PID or name)",
                        "name": "identifier",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Process logs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Process not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "api.FileRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "file contents here"
                },
                "isDirectory": {
                    "type": "boolean",
                    "example": false
                },
                "permissions": {
                    "type": "string",
                    "example": "0644"
                }
            }
        },
        "api.PortMonitorRequest": {
            "type": "object",
            "properties": {
                "callback": {
                    "description": "URL to call when a new port is detected",
                    "type": "string",
                    "example": "http://localhost:3000/callback"
                }
            }
        },
        "api.ProcessKillRequest": {
            "type": "object",
            "properties": {
                "signal": {
                    "type": "string",
                    "example": "SIGTERM"
                }
            }
        },
        "api.ProcessRequest": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "string",
                    "example": "ls -la"
                },
                "name": {
                    "type": "string",
                    "example": "my-process"
                },
                "streamLogs": {
                    "type": "boolean",
                    "example": true
                },
                "timeout": {
                    "type": "integer",
                    "example": 30
                },
                "waitForCompletion": {
                    "type": "boolean",
                    "example": false
                },
                "waitForPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        3000,
                        8080
                    ]
                },
                "workingDir": {
                    "type": "string",
                    "example": "/home/user"
                }
            }
        },
        "api.ProcessResponse": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string",
                    "example": "ls -la"
                },
                "completedAt": {
                    "type": "string",
                    "example": "Wed, 01 Jan 2023 12:01:00 GMT"
                },
                "exitCode": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "my-process"
                },
                "pid": {
                    "type": "string",
                    "example": "1234"
                },
                "startedAt": {
                    "type": "string",
                    "example": "Wed, 01 Jan 2023 12:00:00 GMT"
                },
                "status": {
                    "type": "string",
                    "example": "running"
                },
                "workingDir": {
                    "type": "string",
                    "example": "/home/user"
                }
            }
        },
        "api.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "File created successfully"
                },
                "path": {
                    "type": "string",
                    "example": "/path/to/file"
                }
            }
        },
        "filesystem.Directory": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/filesystem.File"
                    }
                },
                "path": {
                    "type": "string"
                },
                "subdirectories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/filesystem.Directory"
                    }
                }
            }
        },
        "filesystem.File": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "permissions": {
                    "description": "swagger:strfmt string",
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "filesystem.FileWithContent": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "group": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "permissions": {
                    "description": "swagger:strfmt string",
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1-preview",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Sandbox API",
	Description:      "API for manipulating filesystem, processes and network.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
